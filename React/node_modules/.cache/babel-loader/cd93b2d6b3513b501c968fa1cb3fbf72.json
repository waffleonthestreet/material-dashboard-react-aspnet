{"ast":null,"code":"import _slicedToArray from \"C:/Users/woojo/AppData/Roaming/npm/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\woojo\\\\source\\\\repos\\\\material-dashboard-react-aspnet\\\\React\\\\src\\\\views\\\\UserProfile\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from 'react-redux';\nimport avatar from \"assets/img/faces/marc.jpg\";\nvar styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\nvar useStyles = makeStyles(styles);\nexport default function UserProfile() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useForm2 = useForm(),\n      registerPasswordFrom = _useForm2.register,\n      handleSubmitPasswordFrom = _useForm2.handleSubmit;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      ok = _React$useState2[0],\n      setOK = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      error = _React$useState4[0],\n      setError = _React$useState4[1];\n\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n\n  var showNotification = function showNotification(place) {\n    switch (place) {\n      case \"tr\":\n        if (!ok) {\n          setOK(true);\n          setTimeout(function () {\n            setOK(false);\n          }, 6000);\n        }\n\n        break;\n\n      case \"tc\":\n        if (!error) {\n          setError(true);\n          setTimeout(function () {\n            setError(false);\n          }, 6000);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var onSubmitProfile = function onSubmitProfile(data) {\n    axios.post(\"\".concat(process.env.REACT_APP_AUTH_SERVER_URL, \"/Profile\"), {\n      Email: data.Email,\n      NewUserName: data.NewUserName,\n      CurrentUserName: user === null || user === void 0 ? void 0 : user.preferred_username\n    }).then(function (res) {\n      //update stored profile\n      user.email = res.data.email;\n      user.preferred_username = res.data.newUserName;\n      showNotification(\"tr\");\n    })[\"catch\"](function (error) {\n      console.log(error);\n      showNotification(\"tc\");\n    });\n  };\n\n  var onSubmitPassword = function onSubmitPassword(data, e) {\n    axios.post(\"\".concat(process.env.REACT_APP_AUTH_SERVER_URL, \"/Password\"), {\n      UserName: user === null || user === void 0 ? void 0 : user.data.email,\n      CurrentPassword: data.CurrentPassword,\n      NewPassword: data.NewPassword\n    }).then(function (res) {\n      showNotification(\"tr\");\n      e.target.reset();\n    })[\"catch\"](function (error) {\n      console.log(error);\n      showNotification(\"tc\");\n    });\n  };\n\n  if (user) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit(onSubmitProfile),\n      className: classes.form,\n      key: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.cardTitleWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.cardCategoryWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, \"User information\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      inputRef: register({\n        required: true\n      }),\n      labelText: \"Name\",\n      id: \"NewUserName\",\n      name: \"NewUserName\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        defaultValue: user === null || user === void 0 ? void 0 : user.preferred_username,\n        type: \"text\",\n        autoComplete: \"off\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      inputRef: register({\n        required: true\n      }),\n      labelText: \"Email address\",\n      id: \"Email\",\n      name: \"Email\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        defaultValue: user === null || user === void 0 ? void 0 : user.email,\n        type: \"text\",\n        autoComplete: \"off\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(CardFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Snackbar, {\n      place: \"tr\",\n      color: \"success\",\n      icon: AddAlert,\n      message: \"Saved\",\n      open: ok,\n      closeNotification: function closeNotification() {\n        return setOK(false);\n      },\n      close: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      place: \"tc\",\n      color: \"danger\",\n      icon: AddAlert,\n      message: \"Failed\",\n      open: error,\n      closeNotification: function closeNotification() {\n        return setError(false);\n      },\n      close: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmitPasswordFrom(onSubmitPassword),\n      className: classes.form,\n      key: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.cardTitleWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, \"Change password\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.cardCategoryWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, \"Password\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GridContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      inputRef: registerPasswordFrom({\n        required: true\n      }),\n      labelText: \"Current Password\",\n      id: \"CurrentPassword\",\n      name: \"CurrentPassword\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        type: \"password\",\n        autoComplete: \"off\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      inputRef: registerPasswordFrom({\n        required: true\n      }),\n      labelText: \"New Password\",\n      id: \"NewPassword\",\n      name: \"NewPassword\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        type: \"password\",\n        autoComplete: \"off\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      inputRef: registerPasswordFrom({\n        required: true\n      }),\n      labelText: \"Confirm New Password\",\n      id: \"ConfirmNewPassword\",\n      name: \"ConfirmNewPassword\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        type: \"password\",\n        autoComplete: \"off\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(CardFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, \"Change Password\"))))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardAvatar, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#pablo\",\n      onClick: function onClick(e) {\n        return e.preventDefault();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar,\n      alt: \"...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(CardBody, {\n      profile: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: classes.cardCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \"CEO / CO-FOUNDER\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, \"Alec Thompson\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, \"Don\", \"'\", \"t be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens\\u2019 bed design but the back is...\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      round: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, \"Follow\"))))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 12\n      }\n    }, \"Unauthorized\");\n  }\n}\n\n_s(UserProfile, \"81ITvGVSTFVLWNEhslh6kBgKZrc=\", false, function () {\n  return [useStyles, useForm, useForm, useSelector];\n});\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["C:/Users/woojo/source/repos/material-dashboard-react-aspnet/React/src/views/UserProfile/UserProfile.js"],"names":["React","makeStyles","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardAvatar","CardBody","CardFooter","Snackbar","AddAlert","axios","useForm","useSelector","avatar","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","UserProfile","classes","register","handleSubmit","registerPasswordFrom","handleSubmitPasswordFrom","useState","ok","setOK","error","setError","user","state","auth","showNotification","place","setTimeout","onSubmitProfile","data","post","process","env","REACT_APP_AUTH_SERVER_URL","Email","NewUserName","CurrentUserName","preferred_username","then","res","email","newUserName","console","log","onSubmitPassword","e","UserName","CurrentPassword","NewPassword","target","reset","form","required","fullWidth","defaultValue","type","autoComplete","preventDefault","cardCategory","cardTitle","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport AddAlert from \"@material-ui/icons/AddAlert\";\r\n\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport avatar from \"assets/img/faces/marc.jpg\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function UserProfile() {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n  const {\r\n    register: registerPasswordFrom,\r\n    handleSubmit: handleSubmitPasswordFrom,\r\n  } = useForm();\r\n\r\n  const [ok, setOK] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n\r\n    const user = useSelector(state => state.auth.user)\r\n\r\n  const showNotification = (place) => {\r\n    switch (place) {\r\n      case \"tr\":\r\n        if (!ok) {\r\n          setOK(true);\r\n          setTimeout(function () {\r\n            setOK(false);\r\n          }, 6000);\r\n        }\r\n        break;\r\n      case \"tc\":\r\n        if (!error) {\r\n          setError(true);\r\n          setTimeout(function () {\r\n            setError(false);\r\n          }, 6000);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmitProfile = (data) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_AUTH_SERVER_URL}/Profile`, {\r\n        Email: data.Email,\r\n        NewUserName: data.NewUserName,\r\n        CurrentUserName: user?.preferred_username,\r\n      })\r\n      .then((res) => {\r\n        //update stored profile\r\n        user.email = res.data.email;\r\n        user.preferred_username = res.data.newUserName;       \r\n        \r\n        showNotification(\"tr\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        showNotification(\"tc\");\r\n      });\r\n  };\r\n\r\n  const onSubmitPassword = (data, e) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_AUTH_SERVER_URL}/Password`, {\r\n          UserName: user?.data.email,\r\n        CurrentPassword: data.CurrentPassword,\r\n        NewPassword: data.NewPassword,\r\n      })\r\n      .then((res) => {\r\n        showNotification(\"tr\");\r\n        e.target.reset();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        showNotification(\"tc\");\r\n      });\r\n  };\r\n\r\n    if (user) {\r\n    return (\r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={8}>\r\n            <form\r\n              onSubmit={handleSubmit(onSubmitProfile)}\r\n              className={classes.form}\r\n              key={1}\r\n            >\r\n              <Card>\r\n                <CardHeader color=\"primary\">\r\n                  <h4 className={classes.cardTitleWhite}>Edit Profile</h4>\r\n                  <p className={classes.cardCategoryWhite}>User information</p>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                  <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={6}>\r\n                      <CustomInput\r\n                        inputRef={register({ required: true })}\r\n                        labelText=\"Name\"\r\n                        id=\"NewUserName\"\r\n                        name=\"NewUserName\"\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                            defaultValue: user?.preferred_username,\r\n                          type: \"text\",\r\n                          autoComplete: \"off\",\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={6}>\r\n                      <CustomInput\r\n                        inputRef={register({ required: true })}\r\n                        labelText=\"Email address\"\r\n                        id=\"Email\"\r\n                        name=\"Email\"\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          defaultValue: user?.email,\r\n                          type: \"text\",\r\n                          autoComplete: \"off\",\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                  </GridContainer>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                  <Snackbar\r\n                    place=\"tr\"\r\n                    color=\"success\"\r\n                    icon={AddAlert}\r\n                    message=\"Saved\"\r\n                    open={ok}\r\n                    closeNotification={() => setOK(false)}\r\n                    close\r\n                  />\r\n                  <Snackbar\r\n                    place=\"tc\"\r\n                    color=\"danger\"\r\n                    icon={AddAlert}\r\n                    message=\"Failed\"\r\n                    open={error}\r\n                    closeNotification={() => setError(false)}\r\n                    close\r\n                  />\r\n                </CardFooter>\r\n              </Card>\r\n            </form>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={8}>\r\n            <form\r\n              onSubmit={handleSubmitPasswordFrom(onSubmitPassword)}\r\n              className={classes.form}\r\n              key={2}\r\n            >\r\n              <Card>\r\n                <CardHeader color=\"primary\">\r\n                  <h4 className={classes.cardTitleWhite}>Change password</h4>\r\n                  <p className={classes.cardCategoryWhite}>Password</p>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                      <CustomInput\r\n                        inputRef={registerPasswordFrom({ required: true })}\r\n                        labelText=\"Current Password\"\r\n                        id=\"CurrentPassword\"\r\n                        name=\"CurrentPassword\"\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"password\",\r\n                          autoComplete: \"off\",\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                      <CustomInput\r\n                        inputRef={registerPasswordFrom({ required: true })}\r\n                        labelText=\"New Password\"\r\n                        id=\"NewPassword\"\r\n                        name=\"NewPassword\"\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"password\",\r\n                          autoComplete: \"off\",\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                      <CustomInput\r\n                        inputRef={registerPasswordFrom({ required: true })}\r\n                        labelText=\"Confirm New Password\"\r\n                        id=\"ConfirmNewPassword\"\r\n                        name=\"ConfirmNewPassword\"\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          type: \"password\",\r\n                          autoComplete: \"off\",\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                  </GridContainer>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Change Password\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            </form>\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={4}>\r\n            <Card profile>\r\n              <CardAvatar profile>\r\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                  <img src={avatar} alt=\"...\" />\r\n                </a>\r\n              </CardAvatar>\r\n              <CardBody profile>\r\n                <h6 className={classes.cardCategory}>CEO / CO-FOUNDER</h6>\r\n                <h4 className={classes.cardTitle}>Alec Thompson</h4>\r\n                <p className={classes.description}>\r\n                  Don{\"'\"}t be scared of the truth because we need to restart\r\n                  the human foundation in truth And I love you like Kanye loves\r\n                  Kanye I love Rick Owens’ bed design but the back is...\r\n                </p>\r\n                <Button color=\"primary\" round>\r\n                  Follow\r\n                </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </GridItem>\r\n        </GridContainer>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Unauthorized</div>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}