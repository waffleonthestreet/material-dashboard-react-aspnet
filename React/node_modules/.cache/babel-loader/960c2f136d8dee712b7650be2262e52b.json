{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\woojo\\\\source\\\\repos\\\\material-dashboard-react-aspnet\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\woojo\\\\source\\\\repos\\\\material-dashboard-react-aspnet\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\woojo\\\\source\\\\repos\\\\material-dashboard-react-aspnet\\\\React\\\\src\\\\components\\\\Navbars\\\\AuthNavBar.js\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\"; // @material-ui/icons\n\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport PersonAdd from \"@material-ui/icons/PersonAdd\"; // core components\n\nimport Button from \"components/CustomButtons/Button\";\nimport styles from \"assets/jss/material-dashboard-react/components/authNavbarStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function AuthNavbar(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setOpen(!open);\n  }; // verifies if routeName is the one active (in browser input)\n\n\n  var activeRoute = function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  };\n\n  var classes = useStyles();\n  var color = props.color,\n      brandText = props.brandText;\n  var appBarClasses = cx(_defineProperty({}, \" \" + classes[color], color));\n  var list = /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/admin/dashboard\",\n    className: classes.navLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dashboard, {\n    className: classes.listItemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Dashboard\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/auth/register-page\",\n    className: cx(classes.navLink, _defineProperty({}, classes.navLinkActive, activeRoute(\"/auth/register-page\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PersonAdd, {\n    className: classes.listItemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Register\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    className: classes.appBar + appBarClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: \"#\",\n    className: classes.title,\n    color: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, brandText))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: \"#\",\n    className: classes.title,\n    color: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"MD Pro React\"))), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, list), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.sidebarButton,\n    color: \"transparent\",\n    justIcon: true,\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, list)))));\n}\nAuthNavbar.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  brandText: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/woojo/source/repos/material-dashboard-react-aspnet/React/src/components/Navbars/AuthNavBar.js"],"names":["React","cx","PropTypes","NavLink","makeStyles","AppBar","Toolbar","Hidden","Drawer","List","ListItem","ListItemText","Dashboard","Menu","PersonAdd","Button","styles","useStyles","AuthNavbar","props","useState","open","setOpen","handleDrawerToggle","activeRoute","routeName","window","location","href","indexOf","classes","color","brandText","appBarClasses","list","listItem","navLink","listItemIcon","listItemText","navLinkActive","appBar","container","flex","title","sidebarButton","paper","drawerPaper","keepMounted","propTypes","oneOf","string"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\n// @material-ui/icons\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nimport Menu from \"@material-ui/icons/Menu\";\r\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\r\n\r\n// core components\r\nimport Button from \"components/CustomButtons/Button\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/authNavbarStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function AuthNavbar(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleDrawerToggle = () => {\r\n        setOpen(!open);\r\n    };\r\n    // verifies if routeName is the one active (in browser input)\r\n    const activeRoute = routeName => {\r\n        return window.location.href.indexOf(routeName) > -1 ? true : false;\r\n    };\r\n    const classes = useStyles();\r\n    const { color, brandText } = props;\r\n    const appBarClasses = cx({\r\n        [\" \" + classes[color]]: color\r\n    });\r\n    var list = (\r\n        <List className={classes.list}>\r\n            <ListItem className={classes.listItem}>\r\n                <NavLink to={\"/admin/dashboard\"} className={classes.navLink}>\r\n                    <Dashboard className={classes.listItemIcon} />\r\n                    <ListItemText\r\n                        primary={\"Dashboard\"}\r\n                        disableTypography={true}\r\n                        className={classes.listItemText}\r\n                    />\r\n                </NavLink>\r\n            </ListItem>\r\n            <ListItem className={classes.listItem}>\r\n                <NavLink\r\n                    to={\"/auth/register-page\"}\r\n                    className={cx(classes.navLink, {\r\n                        [classes.navLinkActive]: activeRoute(\"/auth/register-page\")\r\n                    })}\r\n                >\r\n                    <PersonAdd className={classes.listItemIcon} />\r\n                    <ListItemText\r\n                        primary={\"Register\"}\r\n                        disableTypography={true}\r\n                        className={classes.listItemText}\r\n                    />\r\n                </NavLink>\r\n            </ListItem>\r\n        </List>\r\n    );\r\n    return (\r\n        <AppBar position=\"static\" className={classes.appBar + appBarClasses}>\r\n            <Toolbar className={classes.container}>\r\n                <Hidden smDown>\r\n                    <div className={classes.flex}>\r\n                        <Button href=\"#\" className={classes.title} color=\"transparent\">\r\n                            {brandText}\r\n                        </Button>\r\n                    </div>\r\n                </Hidden>\r\n                <Hidden mdUp>\r\n                    <div className={classes.flex}>\r\n                        <Button href=\"#\" className={classes.title} color=\"transparent\">\r\n                            MD Pro React\r\n            </Button>\r\n                    </div>\r\n                </Hidden>\r\n                <Hidden smDown>{list}</Hidden>\r\n                <Hidden mdUp>\r\n                    <Button\r\n                        className={classes.sidebarButton}\r\n                        color=\"transparent\"\r\n                        justIcon\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerToggle}\r\n                    >\r\n                        <Menu />\r\n                    </Button>\r\n                </Hidden>\r\n                <Hidden mdUp>\r\n                    <Hidden mdUp>\r\n                        <Drawer\r\n                            variant=\"temporary\"\r\n                            anchor={\"right\"}\r\n                            open={open}\r\n                            classes={{\r\n                                paper: classes.drawerPaper\r\n                            }}\r\n                            onClose={handleDrawerToggle}\r\n                            ModalProps={{\r\n                                keepMounted: true // Better open performance on mobile.\r\n                            }}\r\n                        >\r\n                            {list}\r\n                        </Drawer>\r\n                    </Hidden>\r\n                </Hidden>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nAuthNavbar.propTypes = {\r\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\r\n    brandText: PropTypes.string\r\n};\r\n"]},"metadata":{},"sourceType":"module"}