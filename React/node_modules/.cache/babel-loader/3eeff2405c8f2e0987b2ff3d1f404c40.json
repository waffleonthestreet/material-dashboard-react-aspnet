{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\woojo\\\\source\\\\repos\\\\material-dashboard-react-aspnet\\\\React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\woojo\\\\source\\\\repos\\\\material-dashboard-react-aspnet\\\\React\\\\src\\\\views\\\\UserProfile\\\\LoginPage.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { login } from \"services/oauth\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport styles from \"assets/jss/material-dashboard-react/views/loginPageStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function LoginPage() {\n  var _this = this;\n\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  var history = useHistory();\n\n  var _React$useState = React.useState(\"cardHidden\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardAnimaton = _React$useState2[0],\n      setCardAnimation = _React$useState2[1];\n\n  var _useForm = useForm(),\n      loginFrom = _useForm.register,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      error = _React$useState4[0],\n      setError = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (user) {\n      history.push(\"/admin/dasboard\");\n    }\n\n    var id = setTimeout(function () {\n      setCardAnimation(\"\");\n    }, 700); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      window.clearTimeout(id);\n    };\n  });\n  var classes = useStyles();\n\n  var showNotification = function showNotification(place) {\n    switch (place) {\n      case \"tr\":\n        if (!error) {\n          setError(true);\n          setTimeout(function () {\n            setError(false);\n          }, 6000);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var onSubmitLogin = function onSubmitLogin(data) {\n    login({\n      email: data.email,\n      password: data.password\n    }).then(function (token) {\n      if (token) {\n        history.push(\"/admin/dasboard\");\n      } else {\n        showNotification(\"tr\");\n      }\n    })[\"catch\"](function (error) {\n      console.log(error);\n      showNotification(\"tr\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmitLogin),\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    login: true,\n    className: classes[cardAnimaton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"\".concat(classes.cardHeader, \" \").concat(classes.textCenter),\n    color: \"rose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.socialLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, [\"fab fa-facebook-square\", \"fab fa-twitter\", \"fab fa-google-plus\"].map(function (prop, key) {\n    return /*#__PURE__*/React.createElement(Button, {\n      color: \"transparent\",\n      justIcon: true,\n      key: key,\n      className: classes.customButtonClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: prop,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    inputRef: loginFrom({\n      required: true\n    }),\n    labelText: \"Email...\",\n    id: \"email\",\n    name: \"email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputAdornmentIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    inputRef: loginFrom({\n      required: true\n    }),\n    labelText: \"Password\",\n    id: \"password\",\n    name: \"password\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.inputAdornmentIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, \"lock_outline\")),\n      type: \"password\",\n      autoComplete: \"off\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(CardFooter, {\n    className: classes.justifyContentCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 31\n    }\n  }, \"The default users are \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 56\n    }\n  }, \"alice/bob\"), \", password: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 94\n    }\n  }, \"Pass123$\"))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: classes.justifyContentCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"rose\",\n    simple: true,\n    size: \"lg\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"Let\", \"'\", \"s Go\"), /*#__PURE__*/React.createElement(Snackbar, {\n    place: \"tr\",\n    color: \"danger\",\n    icon: AddAlert,\n    message: \"Failed to authenticate\",\n    open: error,\n    closeNotification: function closeNotification() {\n      return setError(false);\n    },\n    close: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  })))))));\n}","map":{"version":3,"sources":["C:/Users/woojo/source/repos/material-dashboard-react-aspnet/React/src/views/UserProfile/LoginPage.js"],"names":["React","useForm","login","useHistory","useSelector","makeStyles","InputAdornment","Icon","Email","GridContainer","GridItem","CustomInput","Button","Card","CardBody","CardHeader","CardFooter","Snackbar","AddAlert","styles","useStyles","LoginPage","user","state","auth","history","useState","cardAnimaton","setCardAnimation","loginFrom","register","handleSubmit","error","setError","useEffect","push","id","setTimeout","cleanup","window","clearTimeout","classes","showNotification","place","onSubmitLogin","data","email","password","then","token","console","log","container","cardHeader","textCenter","cardTitle","socialLine","map","prop","key","customButtonClass","required","fullWidth","endAdornment","inputAdornmentIcon","type","autoComplete","justifyContentCenter"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { login } from \"services/oauth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\n// @material-ui/icons\r\nimport Email from \"@material-ui/icons/Email\";\r\n\r\n// core components\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport AddAlert from \"@material-ui/icons/AddAlert\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/loginPageStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function LoginPage() {\r\n  const user = useSelector((state) => state.auth.user);\r\n  const history = useHistory();\r\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\r\n  const { register: loginFrom, handleSubmit } = useForm();\r\n  const [error, setError] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (user) {\r\n      history.push(\"/admin/dasboard\");\r\n    }\r\n    let id = setTimeout(function () {\r\n      setCardAnimation(\"\");\r\n    }, 700);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.clearTimeout(id);\r\n    };\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const showNotification = (place) => {\r\n    switch (place) {\r\n      case \"tr\":\r\n        if (!error) {\r\n          setError(true);\r\n          setTimeout(function () {\r\n            setError(false);\r\n          }, 6000);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmitLogin = (data) => {\r\n      login({ email: data.email, password: data.password })\r\n      .then((token) => {\r\n        if (token) {\r\n          history.push(\"/admin/dasboard\");\r\n        } else {\r\n          showNotification(\"tr\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        showNotification(\"tr\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <GridContainer justify=\"center\">\r\n        <GridItem xs={12} sm={6} md={4}>\r\n          <form onSubmit={handleSubmit(onSubmitLogin)} key={1}>\r\n            <Card login className={classes[cardAnimaton]}>\r\n              <CardHeader\r\n                className={`${classes.cardHeader} ${classes.textCenter}`}\r\n                color=\"rose\"\r\n              >\r\n                <h4 className={classes.cardTitle}>Log in</h4>\r\n                <div className={classes.socialLine}>\r\n                  {[\r\n                    \"fab fa-facebook-square\",\r\n                    \"fab fa-twitter\",\r\n                    \"fab fa-google-plus\",\r\n                  ].map((prop, key) => {\r\n                    return (\r\n                      <Button\r\n                        color=\"transparent\"\r\n                        justIcon\r\n                        key={key}\r\n                        className={classes.customButtonClass}\r\n                      >\r\n                        <i className={prop} />\r\n                      </Button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <CustomInput\r\n                  inputRef={loginFrom({ required: true })}\r\n                  labelText=\"Email...\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <Email className={classes.inputAdornmentIcon} />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <CustomInput\r\n                  inputRef={loginFrom({ required: true })}\r\n                  labelText=\"Password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <Icon className={classes.inputAdornmentIcon}>\r\n                          lock_outline\r\n                        </Icon>\r\n                      </InputAdornment>\r\n                    ),\r\n                    type: \"password\",\r\n                    autoComplete: \"off\",\r\n                  }}\r\n                />\r\n                          </CardBody>\r\n                          <CardFooter className={classes.justifyContentCenter}>\r\n                              <p>The default users are <strong>alice/bob</strong>, password: <strong>Pass123$</strong></p>\r\n                          </CardFooter>\r\n              <CardFooter className={classes.justifyContentCenter}>\r\n                <Button type=\"submit\" color=\"rose\" simple size=\"lg\" block>\r\n                  Let{\"'\"}s Go\r\n                </Button>\r\n                <Snackbar\r\n                  place=\"tr\"\r\n                  color=\"danger\"\r\n                  icon={AddAlert}\r\n                  message=\"Failed to authenticate\"\r\n                  open={error}\r\n                  closeNotification={() => setError(false)}\r\n                  close\r\n                />\r\n              </CardFooter>\r\n            </Card>\r\n          </form>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}