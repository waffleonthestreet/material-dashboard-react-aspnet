{"version":3,"file":"unchanged.esm.js","sources":["../node_modules/tslib/tslib.es6.js","../src/utils.ts","../src/handlers.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// external dependencies\nimport { parse } from 'pathington';\n\nconst O = Object;\nconst { create, getOwnPropertySymbols, getPrototypeOf, keys, propertyIsEnumerable } = O;\n\nconst { isArray } = Array;\n\ntype ToString = (value: any) => string;\n\nconst toStringFunction: ToString = Function.prototype.bind.call(\n  Function.prototype.call,\n  Function.prototype.toString,\n);\nconst toStringObject: ToString = Function.prototype.bind.call(\n  Function.prototype.call,\n  O.prototype.toString,\n);\n\n/**\n * @constant HAS_SYMBOL_SUPPORT are Symbols supported\n */\nconst HAS_SYMBOL_SUPPORT = typeof Symbol === 'function' && typeof Symbol.for === 'function';\n\n/**\n * @constant REACT_ELEMENT the symbol / number specific to react elements\n */\nconst REACT_ELEMENT: symbol | number = HAS_SYMBOL_SUPPORT ? Symbol.for('react.element') : 0xeac7;\n\n/**\n * @function cloneArray\n *\n * @description\n * clone an array to a new array\n *\n * @param array the array to clone\n * @returns the cloned array\n */\nexport const cloneArray = (array: any[]): any[] => {\n  const Constructor = array.constructor as ArrayConstructor;\n  const cloned = Constructor === Array ? [] : new Constructor();\n\n  for (let index = 0, length = array.length; index < length; index++) {\n    cloned[index] = array[index];\n  }\n\n  return cloned;\n};\n\n/**\n * @function reduce\n *\n * @description\n * a targeted reduce method faster than the native\n *\n * @param array the array to reduce\n * @param fn the method to reduce each array value with\n * @param initialValue the initial value of the reduction\n * @returns the reduced value\n */\nexport const reduce = (\n  array: any[],\n  fn: (accum: any, value: any) => any,\n  initialValue: any,\n): any => {\n  let value = initialValue;\n\n  for (let index = 0, length = array.length; index < length; index++) {\n    value = fn(value, array[index]);\n  }\n\n  return value;\n};\n\n/**\n * @function getOwnProperties\n *\n * @description\n * get the all properties (keys and symbols) of the object passed\n *\n * @param object the object to get the properties of\n * @returns the keys and symbols the object has\n */\nexport const getOwnProperties = (object: unchanged.Unchangeable): (string | symbol)[] => {\n  if (!HAS_SYMBOL_SUPPORT) {\n    return keys(object);\n  }\n\n  const ownSymbols: symbol[] = getOwnPropertySymbols(object);\n\n  if (!ownSymbols.length) {\n    return keys(object);\n  }\n\n  return keys(object).concat(\n    reduce(\n      ownSymbols,\n      (enumerableSymbols: symbol[], symbol: symbol): symbol[] => {\n        if (propertyIsEnumerable.call(object, symbol)) {\n          enumerableSymbols.push(symbol);\n        }\n\n        return enumerableSymbols;\n      },\n      [],\n    ),\n  );\n};\n\n/**\n * @function assignFallback\n *\n * @description\n * a targeted fallback if native Object.assign is unavailable\n *\n * @param target the object to shallowly merge into\n * @param source the object to shallowly merge into target\n * @returns the shallowly merged object\n */\nexport const assignFallback = (\n  target: unchanged.Unchangeable,\n  source: unchanged.Unchangeable,\n): unchanged.Unchangeable => {\n  if (!source) {\n    return target;\n  }\n\n  return reduce(\n    getOwnProperties(source),\n    (clonedObject: unchanged.Unchangeable, property: string) => {\n      clonedObject[property] = source[property];\n\n      return clonedObject;\n    },\n    Object(target),\n  );\n};\n\nconst assign = typeof O.assign === 'function' ? O.assign : assignFallback;\n\n/**\n * @function createWithProto\n *\n * @description\n * create a new object with the prototype of the object passed\n *\n * @param object object whose prototype will be the new object's prototype\n * @returns object with the prototype of the one passed\n */\nexport const createWithProto = (object: unchanged.Unchangeable): unchanged.Unchangeable =>\n  create(object.__proto__ || getPrototypeOf(object));\n\n/**\n * @function isCloneable\n *\n * @description\n * is the object passed considered cloneable\n *\n * @param object the object that is being checked for cloneability\n * @returns whether the object can be cloned\n */\nexport const isCloneable = (object: any) => {\n  if (!object || typeof object !== 'object' || object.$$typeof === REACT_ELEMENT) {\n    return false;\n  }\n\n  const type = toStringObject(object);\n\n  return type !== '[object Date]' && type !== '[object RegExp]';\n};\n\n/**\n * @function isEmptyPath\n *\n * @description\n * is the path passed an empty path\n *\n * @param path the path to check for emptiness\n * @returns whether the path passed is considered empty\n */\nexport const isEmptyPath = (path: any) => path == null || (isArray(path) && !path.length);\n\n/**\n * @function isGlobalConstructor\n *\n * @description\n * is the fn passed a global constructor\n *\n * @param fn the fn to check if a global constructor\n * @returns whether the fn passed is a global constructor\n */\nexport const isGlobalConstructor = (fn: any) =>\n  typeof fn === 'function' && !!~toStringFunction(fn).indexOf('[native code]');\n\n/**\n * @function callIfFunction\n *\n * @description\n * if the object passed is a function, call it and return its return, else return undefined\n *\n * @param object the object to call if a function\n * @param context the context to call the function with\n * @param parameters the parameters to call the function with\n * @returns the result of the function call, or undefined\n */\nexport const callIfFunction = (object: any, context: any, parameters: any[]) =>\n  typeof object === 'function' ? object.apply(context, parameters) : void 0;\n\n/**\n * @function getNewEmptyChild\n *\n * @description\n * get a new empty child object based on the key passed\n *\n * @param key the key to base the empty child on\n * @returns the empty object the child is built from\n */\nexport const getNewEmptyChild = (key: any): unchanged.Unchangeable =>\n  typeof key === 'number' ? [] : {};\n\n/**\n * @function getNewEmptyObject\n *\n * @description\n * get a new empty object based on the object passed\n *\n * @param object the object to base the empty object on\n * @returns an empty version of the object passed\n */\nexport const getNewEmptyObject = (object: unchanged.Unchangeable): unchanged.Unchangeable =>\n  isArray(object) ? [] : {};\n\n/**\n * @function getShallowClone\n *\n * @description\n * create a shallow clone of the object passed, respecting its prototype\n *\n * @param object the object to clone\n * @returns a shallow clone of the object passed\n */\nexport const getShallowClone = (object: unchanged.Unchangeable): unchanged.Unchangeable => {\n  if (object.constructor === O) {\n    return assign({}, object);\n  }\n\n  if (isArray(object)) {\n    return cloneArray(object);\n  }\n\n  return isGlobalConstructor(object.constructor) ? {} : assign(createWithProto(object), object);\n};\n\n/**\n * @function isSameValueZero\n *\n * @description\n * are the values equal based on SameValueZero\n *\n * @param value1 the first value to test\n * @param value2 the second value to test\n * @returns are the two values passed equal based on SameValueZero\n */\nexport const isSameValueZero = (value1: any, value2: any) =>\n  value1 === value2 || (value1 !== value1 && value2 !== value2);\n\n/**\n * @function cloneIfPossible\n *\n * @description\n * clone the object if it can be cloned, otherwise return the object itself\n *\n * @param object the object to clone\n * @returns a cloned version of the object, or the object itself if not cloneable\n */\nexport const cloneIfPossible = (object: any) =>\n  isCloneable(object) ? getShallowClone(object) : object;\n\n/**\n * @function getCloneOrEmptyObject\n *\n * @description\n * if the object is cloneable, get a clone of the object, else get a new\n * empty child object based on the key\n *\n * @param object the object to clone\n * @param nextKey the key to base the empty child object on\n * @returns a clone of the object, or an empty child object\n */\nexport const getCloneOrEmptyObject = (\n  object: unchanged.Unchangeable,\n  nextKey: any,\n): unchanged.Unchangeable =>\n  isCloneable(object) ? getShallowClone(object) : getNewEmptyChild(nextKey);\n\n/**\n * @function getCoalescedValue\n *\n * @description\n * return the value if not undefined, otherwise return the fallback value\n *\n * @param value the value to coalesce if undefined\n * @param fallbackValue the value to coalesce to\n * @returns the coalesced value\n */\nexport const getCoalescedValue = (value: any, fallbackValue: any) =>\n  value === void 0 ? fallbackValue : value;\n\n/**\n * @function getParsedPath\n *\n * @description\n * parse the path passed into an array path\n *\n * @param path the path to parse\n * @returns the parsed path\n */\nexport const getParsedPath = (path: unchanged.Path): unchanged.ParsedPath =>\n  isArray(path) ? path : parse(path);\n\n/**\n * @function getCloneAtPath\n *\n * @description\n * get a new object, cloned at the path specified while leveraging\n * structural sharing for the rest of the properties\n *\n * @param path the path to clone at\n * @param object the object with cloned children at path\n * @param onMatch the method to call once the end of the path is reached\n * @param index the path index\n * @returns the object deeply cloned at the path specified\n */\nexport const getCloneAtPath = (\n  path: unchanged.ParsedPath,\n  object: unchanged.Unchangeable,\n  onMatch: (object: unchanged.Unchangeable, key: unchanged.PathItem) => any,\n  index: number,\n) => {\n  const key = path[index];\n  const nextIndex = index + 1;\n\n  if (nextIndex === path.length) {\n    onMatch(object, key);\n  } else {\n    object[key] = getCloneAtPath(\n      path,\n      getCloneOrEmptyObject(object[key], path[nextIndex]),\n      onMatch,\n      nextIndex,\n    );\n  }\n\n  return object;\n};\n\n/**\n * @function getDeepClone\n *\n * @description\n * get a clone of the object at the path specified\n *\n * @param path the path to clone at\n * @param object the object to clone at the path\n * @param onMatch once a patch match is found, the callback to fire\n * @returns the clone of the object at path specified\n */\nexport const getDeepClone = (\n  path: unchanged.Path,\n  object: unchanged.Unchangeable,\n  onMatch: (object: unchanged.Unchangeable, key: unchanged.PathItem) => any,\n): unchanged.Unchangeable => {\n  const parsedPath = getParsedPath(path);\n  const topLevelClone = getCloneOrEmptyObject(object, parsedPath[0]);\n\n  if (parsedPath.length === 1) {\n    onMatch(topLevelClone, parsedPath[0]);\n\n    return topLevelClone;\n  }\n\n  return getCloneAtPath(parsedPath, topLevelClone, onMatch, 0);\n};\n\n/**\n * @function getMergedObject\n *\n * @description\n * merge the source into the target, either deeply or shallowly\n *\n * @param target the object to merge into\n * @param source the object being merged into the target\n * @param isDeep is the merge a deep merge\n * @returns the merged object\n */\nexport const getMergedObject = (\n  target: unchanged.Unchangeable,\n  source: unchanged.Unchangeable,\n  isDeep: boolean,\n): unchanged.Unchangeable => {\n  const isObject1Array: boolean = isArray(target);\n\n  if (isObject1Array !== isArray(source) || !isCloneable(target)) {\n    return cloneIfPossible(source);\n  }\n\n  if (isObject1Array) {\n    return target.concat(source);\n  }\n\n  const targetClone: unchanged.Unchangeable =\n    target.constructor === O || isGlobalConstructor(target.constructor)\n      ? {}\n      : createWithProto(target);\n\n  return reduce(\n    getOwnProperties(source),\n    (clone: unchanged.Unchangeable, key: string): unchanged.Unchangeable => {\n      clone[key] =\n        isDeep && isCloneable(source[key])\n          ? getMergedObject(target[key], source[key], isDeep)\n          : source[key];\n\n      return clone;\n    },\n    assign(targetClone, target),\n  );\n};\n\n/**\n * @function getValueAtPath\n *\n * @description\n * get the value at the nested property, or the fallback provided\n *\n * @param path the path to get the value from\n * @param object the object to get the value from at path\n * @param noMatchValue the value returned if no match is found\n * @returns the matching value, or the fallback provided\n */\nexport const getValueAtPath = (\n  path: unchanged.Path,\n  object: unchanged.Unchangeable,\n  noMatchValue?: any,\n) => {\n  const parsedPath = getParsedPath(path);\n\n  if (parsedPath.length === 1) {\n    return object ? getCoalescedValue(object[parsedPath[0]], noMatchValue) : noMatchValue;\n  }\n\n  let ref: any = object;\n  let key: number | string = parsedPath[0];\n\n  for (let index: number = 0; index < parsedPath.length - 1; index++) {\n    if (!ref || !ref[key]) {\n      return noMatchValue;\n    }\n\n    ref = ref[key];\n    key = parsedPath[index + 1];\n  }\n\n  return ref ? getCoalescedValue(ref[key], noMatchValue) : noMatchValue;\n};\n\n/**\n * @function getFullPath\n *\n * @description\n * get the path to add to, based on the object and fn passed\n *\n * @param path the path to add to\n * @param object the object traversed by the path\n * @param fn the function to transform the retrieved value with\n * @returns the full path to add to\n */\nexport const getFullPath = (\n  path: unchanged.Path,\n  object: unchanged.Unchangeable,\n  fn?: (value: any) => any,\n): unchanged.Path => {\n  const isPathEmpty: boolean = isEmptyPath(path);\n  const valueAtPath: any = isPathEmpty\n    ? object\n    : fn\n    ? fn(getValueAtPath(path, object))\n    : getValueAtPath(path, object);\n\n  return isArray(valueAtPath)\n    ? isArray(path)\n      ? path.concat([valueAtPath.length])\n      : `${isPathEmpty ? '' : path}[${valueAtPath.length}]`\n    : path;\n};\n\n/**\n * @function splice\n *\n * @description\n * a faster, more targeted version of the native splice\n *\n * @param array the array to remove the value from\n * @param splicedIndex the index of the value to remove\n */\nexport const splice = (array: any[], splicedIndex: number): void => {\n  if (array.length) {\n    const cutoff = array.length - 1;\n\n    let index = splicedIndex;\n\n    while (index < cutoff) {\n      array[index] = array[index + 1];\n\n      ++index;\n    }\n\n    array.length = cutoff;\n  }\n};\n\n/**\n * @function throwInvalidFnError\n *\n * @description\n * throw the TypeError based on the invalid handler\n *\n * @throws\n */\nexport const throwInvalidFnError = (): never => {\n  throw new TypeError('handler passed is not of type \"function\".');\n};\n","// utils\nimport {\n  callIfFunction,\n  getDeepClone,\n  getFullPath,\n  getMergedObject,\n  getValueAtPath,\n  getNewEmptyObject,\n  isCloneable,\n  isEmptyPath,\n  isSameValueZero,\n  splice,\n  throwInvalidFnError,\n} from './utils';\n\nconst { isArray } = Array;\nconst slice = Function.prototype.bind.call(Function.prototype.call, Array.prototype.slice);\n\n/**\n * @function createCall\n *\n * @description\n * create handlers for call / callWith\n *\n * @param isWithHandler is the method using a with handler\n * @returns call / callWith\n */\nexport function createCall<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): IsWith extends true ? unchanged.CallWith : unchanged.Call;\nexport function createCall<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): unchanged.CallWith | unchanged.Call {\n  if (isWithHandler) {\n    return function callWith(\n      fn: unchanged.WithHandler,\n      path: unchanged.Path,\n      parameters: any[],\n      object: unchanged.Unchangeable | unchanged.Fn,\n      context: any = object,\n    ) {\n      if (typeof fn !== 'function') {\n        throwInvalidFnError();\n      }\n\n      const extraArgs: any[] = slice(arguments, 5);\n\n      if (isEmptyPath(path)) {\n        return callIfFunction(fn(object, ...extraArgs), context, parameters);\n      }\n\n      const value = getValueAtPath(path, object);\n\n      if (value === void 0) {\n        return;\n      }\n\n      const result = fn(value, ...extraArgs);\n\n      return callIfFunction(result, context, parameters);\n    };\n  }\n\n  return function call(\n    path: unchanged.Path,\n    parameters: any[],\n    object: unchanged.Unchangeable | Function,\n    context: any = object,\n  ) {\n    const callable = isEmptyPath(path) ? object : getValueAtPath(path, object);\n\n    return callIfFunction(callable, context, parameters);\n  };\n}\n\n/**\n * @function createGet\n *\n * @description\n * create handlers for get / getWith\n *\n * @param isWithHandler is the method using a with handler\n * @returns get / getWith\n */\nexport function createGet<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): IsWith extends true ? unchanged.GetWith : unchanged.Get;\nexport function createGet<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): unchanged.GetWith | unchanged.Get {\n  if (isWithHandler) {\n    return function getWith(\n      fn: unchanged.WithHandler,\n      path: unchanged.Path,\n      object: unchanged.Unchangeable,\n    ) {\n      if (typeof fn !== 'function') {\n        throwInvalidFnError();\n      }\n\n      const extraArgs: any[] = slice(arguments, 4);\n\n      if (isEmptyPath(path)) {\n        return fn(object, ...extraArgs);\n      }\n\n      const value = getValueAtPath(path, object);\n\n      return value === void 0 ? value : fn(value, ...extraArgs);\n    };\n  }\n\n  return function get(path: unchanged.Path, object: unchanged.Unchangeable) {\n    return isEmptyPath(path) ? object : getValueAtPath(path, object);\n  };\n}\n\n/**\n * @function createGetOr\n *\n * @description\n * create handlers for getOr / getWithOr\n *\n * @param isWithHandler is the method using a with handler\n * @returns getOr / getWithOr\n */\nexport function createGetOr<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): IsWith extends true ? unchanged.GetWithOr : unchanged.GetOr;\nexport function createGetOr<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): unchanged.GetWithOr | unchanged.GetOr {\n  if (isWithHandler) {\n    return function getWithOr(\n      fn: unchanged.WithHandler,\n      noMatchValue: any,\n      path: unchanged.Path,\n      object: unchanged.Unchangeable,\n    ) {\n      if (typeof fn !== 'function') {\n        throwInvalidFnError();\n      }\n\n      const extraArgs: any[] = slice(arguments, 4);\n\n      if (isEmptyPath(path)) {\n        return fn(object, ...extraArgs);\n      }\n\n      const value = getValueAtPath(path, object);\n\n      return value === void 0 ? noMatchValue : fn(value, ...extraArgs);\n    };\n  }\n\n  return function getOr(noMatchValue: any, path: unchanged.Path, object: unchanged.Unchangeable) {\n    return isEmptyPath(path) ? object : getValueAtPath(path, object, noMatchValue);\n  };\n}\n\n/**\n * @function createHas\n *\n * @description\n * create handlers for has / hasWith\n *\n * @param isWithHandler is the method using a with handler\n * @returns has / hasWith\n */\nexport function createHas<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): IsWith extends true ? unchanged.HasWith : unchanged.Has;\nexport function createHas<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): unchanged.HasWith | unchanged.Has {\n  if (isWithHandler) {\n    return function hasWith(\n      fn: unchanged.WithHandler,\n      path: unchanged.Path,\n      object: unchanged.Unchangeable,\n    ) {\n      if (typeof fn !== 'function') {\n        throwInvalidFnError();\n      }\n\n      const extraArgs: any[] = slice(arguments, 3);\n\n      if (isEmptyPath(path)) {\n        return !!fn(object, ...extraArgs);\n      }\n\n      const value: any = getValueAtPath(path, object);\n\n      return value !== void 0 && !!fn(value, ...extraArgs);\n    };\n  }\n\n  return function has(path: unchanged.Path, object: unchanged.Unchangeable) {\n    return isEmptyPath(path) ? object != null : getValueAtPath(path, object) !== void 0;\n  };\n}\n\n/**\n * @function createIs\n *\n * @description\n * create handlers for is / isWith\n *\n * @param isWithHandler is the method using a with handler\n * @returns is / isWith\n */\nexport function createIs<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): IsWith extends true ? unchanged.IsWith : unchanged.Is;\nexport function createIs<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): unchanged.IsWith | unchanged.Is {\n  if (isWithHandler) {\n    return function isWith(\n      fn: unchanged.WithHandler,\n      path: unchanged.Path,\n      value: any,\n      object: unchanged.Unchangeable,\n    ) {\n      if (typeof fn !== 'function') {\n        throwInvalidFnError();\n      }\n\n      const extraArgs: any[] = slice(arguments, 4);\n\n      if (isEmptyPath(path)) {\n        return isSameValueZero(fn(object, ...extraArgs), value);\n      }\n\n      return isSameValueZero(fn(getValueAtPath(path, object), ...extraArgs), value);\n    };\n  }\n\n  return function is(path: unchanged.Path, value: any, object: unchanged.Unchangeable) {\n    const _path = isEmptyPath(path) ? object : getValueAtPath(path, object);\n\n    return isSameValueZero(_path, value);\n  };\n}\n\n/**\n * @function createMerge\n *\n * @description\n * create handlers for merge / mergeWith\n *\n * @param isWithHandler is the method using a with handler\n * @param isDeep is the handler for a deep merge or shallow\n * @returns merge / mergeWith\n */\nexport function createMerge<IsWith extends true | false>(\n  isWithHandler: IsWith,\n  isDeep: boolean,\n): IsWith extends true ? unchanged.MergeWith : unchanged.Merge;\nexport function createMerge<IsWith extends true | false>(\n  isWithHandler: IsWith,\n  isDeep: boolean,\n): unchanged.MergeWith | unchanged.Merge {\n  if (isWithHandler) {\n    return function mergeWith(\n      fn: unchanged.WithHandler,\n      path: unchanged.Path,\n      object: unchanged.Unchangeable,\n    ): unchanged.Unchangeable {\n      if (typeof fn !== 'function') {\n        throwInvalidFnError();\n      }\n\n      const extraArgs: any[] = slice(arguments, 3);\n\n      if (!isCloneable(object)) {\n        return fn(object, ...extraArgs);\n      }\n\n      if (isEmptyPath(path)) {\n        const objectToMerge: any = fn(object, ...extraArgs);\n\n        return objectToMerge ? getMergedObject(object, objectToMerge, isDeep) : object;\n      }\n\n      let hasChanged: boolean = false;\n\n      const result: unchanged.Unchangeable = getDeepClone(\n        path,\n        object,\n        (ref: unchanged.Unchangeable, key: unchanged.PathItem): void => {\n          const objectToMerge: any = fn(ref[key], ...extraArgs);\n\n          if (objectToMerge) {\n            ref[key] = getMergedObject(ref[key], objectToMerge, isDeep);\n\n            hasChanged = true;\n          }\n        },\n      );\n\n      return hasChanged ? result : object;\n    };\n  }\n\n  return function merge(\n    path: unchanged.Path,\n    objectToMerge: unchanged.Unchangeable,\n    object: unchanged.Unchangeable,\n  ): unchanged.Unchangeable {\n    if (!isCloneable(object)) {\n      return objectToMerge;\n    }\n\n    return isEmptyPath(path)\n      ? getMergedObject(object, objectToMerge, true)\n      : getDeepClone(path, object, (ref: unchanged.Unchangeable, key: unchanged.PathItem): void => {\n        ref[key] = getMergedObject(ref[key], objectToMerge, isDeep);\n      });\n  };\n}\n\n/**\n * @function createNot\n *\n * @description\n * create handlers for not / notWith\n *\n * @param isWithHandler not the method using a with handler\n * @returns not / notWithHandler\n */\nexport function createNot<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): IsWith extends true ? unchanged.NotWith : unchanged.Not;\nexport function createNot<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): unchanged.NotWith | unchanged.Not {\n  const is: Function = createIs(isWithHandler);\n\n  return function not(this: any) {\n    return !is.apply(this, arguments);\n  };\n}\n\n/**\n * @function createRemove\n *\n * @description\n * create handlers for remove / removeWith\n *\n * @param isWithHandler is the method using a with handler\n * @returns remove / removeWith\n */\nexport function createRemove<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): IsWith extends true ? unchanged.RemoveWith : unchanged.Remove;\nexport function createRemove<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): unchanged.RemoveWith | unchanged.Remove {\n  if (isWithHandler) {\n    return function removeWith(\n      fn: unchanged.WithHandler,\n      path: unchanged.Path,\n      object: unchanged.Unchangeable,\n    ): unchanged.Unchangeable {\n      if (typeof fn !== 'function') {\n        throwInvalidFnError();\n      }\n\n      const extraArgs: any[] = slice(arguments, 3);\n\n      if (isEmptyPath(path)) {\n        const emptyObject: unchanged.Unchangeable = getNewEmptyObject(object);\n\n        return fn(emptyObject, ...extraArgs) ? emptyObject : object;\n      }\n\n      const value: any = getValueAtPath(path, object);\n\n      return value !== void 0 && fn(value, ...extraArgs)\n        ? getDeepClone(path, object, (ref: unchanged.Unchangeable, key: number | string): void => {\n          if (isArray(ref)) {\n            splice(ref, key as number);\n          } else {\n            delete ref[key];\n          }\n        })\n        : object;\n    };\n  }\n\n  return function remove(\n    path: unchanged.Path,\n    object: unchanged.Unchangeable,\n  ): unchanged.Unchangeable {\n    if (isEmptyPath(path)) {\n      return getNewEmptyObject(object);\n    }\n\n    return getValueAtPath(path, object) !== void 0\n      ? getDeepClone(path, object, (ref: unchanged.Unchangeable, key: number | string): void => {\n        if (isArray(ref)) {\n          splice(ref, key as number);\n        } else {\n          delete ref[key];\n        }\n      })\n      : object;\n  };\n}\n\n/**\n * @function createSet\n *\n * @description\n * create handlers for set / setWith\n *\n * @param isWithHandler is the method using a with handler\n * @returns set / setWith\n */\nexport function createSet<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): IsWith extends true ? unchanged.SetWith : unchanged.Set;\nexport function createSet<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): unchanged.SetWith | unchanged.Set {\n  if (isWithHandler) {\n    return function setWith(\n      fn: unchanged.WithHandler,\n      path: unchanged.Path,\n      object: unchanged.Unchangeable,\n    ): unchanged.Unchangeable {\n      if (typeof fn !== 'function') {\n        throwInvalidFnError();\n      }\n\n      const extraArgs: any[] = slice(arguments, 3);\n\n      return isEmptyPath(path)\n        ? fn(object, ...extraArgs)\n        : getDeepClone(\n            path,\n            object,\n            (ref: unchanged.Unchangeable, key: unchanged.PathItem): void => {\n              ref[key] = fn(ref[key], ...extraArgs);\n            },\n          );\n    };\n  }\n\n  return function set(\n    path: unchanged.Path,\n    value: any,\n    object: unchanged.Unchangeable,\n  ): unchanged.Unchangeable {\n    return isEmptyPath(path)\n      ? value\n      : getDeepClone(path, object, (ref: unchanged.Unchangeable, key: unchanged.PathItem): void => {\n        ref[key] = value;\n      });\n  };\n}\n\n/**\n * @function createAdd\n *\n * @description\n * create handlers for add / addWith\n *\n * @param isWithHandler is the method using a with handler\n * @returns add / addWith\n */\nexport function createAdd<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): IsWith extends true ? unchanged.AddWith : unchanged.Add;\nexport function createAdd<IsWith extends true | false>(\n  isWithHandler: IsWith,\n): unchanged.AddWith | unchanged.Add {\n  const _add: Function = createSet(isWithHandler);\n\n  if (isWithHandler) {\n    return function addWith(\n      this: any,\n      fn: unchanged.WithHandler,\n      path: unchanged.Path,\n      object: unchanged.Unchangeable,\n    ): unchanged.Unchangeable {\n      return _add.apply(\n        this,\n        [fn, getFullPath(path, object, fn), object].concat(slice(arguments, 3)),\n      );\n    };\n  }\n\n  return function add(\n    path: unchanged.Path,\n    value: any,\n    object: unchanged.Unchangeable,\n  ): unchanged.Unchangeable {\n    return _add(getFullPath(path, object), value, object);\n  };\n}\n","// external dependencies\nimport { Curried, __, curry } from 'curriable';\n\n// handlers\nimport {\n  createAdd,\n  createCall,\n  createGet,\n  createGetOr,\n  createHas,\n  createIs,\n  createMerge,\n  createNot,\n  createRemove,\n  createSet,\n} from './handlers';\n\nexport { __ };\n\nexport const add = curry(createAdd(false));\n\nexport const addWith = curry(createAdd(true));\n\nexport const assign = curry(createMerge(false, false));\n\nexport const assignWith = curry(createMerge(true, false));\n\nexport const call = curry(createCall(false), 3) as Curried<unchanged.Call>;\n\nexport const callWith = curry(createCall(true), 4) as Curried<unchanged.CallWith>;\n\nexport const get = curry(createGet(false));\n\nexport const getOr = curry(createGetOr(false));\n\nexport const getWith = curry(createGet(true));\n\nexport const getWithOr = curry(createGetOr(true));\n\nexport const has = curry(createHas(false));\n\nexport const hasWith = curry(createHas(true));\n\nexport const is = curry(createIs(false));\n\nexport const isWith = curry(createIs(true));\n\nexport const merge = curry(createMerge(false, true));\n\nexport const mergeWith = curry(createMerge(true, true));\n\nexport const not = curry(createNot(false));\n\nexport const notWith = curry(createNot(true));\n\nexport const remove = curry(createRemove(false));\n\nexport const removeWith = curry(createRemove(true));\n\nexport const set = curry(createSet(false));\n\nexport const setWith = curry(createSet(true));\n"],"names":["isArray","assign"],"mappings":"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"}