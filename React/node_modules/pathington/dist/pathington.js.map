{"version":3,"sources":["webpack://pathington/webpack/universalModuleDefinition","webpack://pathington/webpack/bootstrap","webpack://pathington/./src/constants.js","webpack://pathington/./src/index.js","webpack://pathington/./src/utils.js"],"names":["CACHE","clear","results","size","DOTTY_WITH_BRACKETS_SYNTAX","MAX_CACHE_SIZE","NUMBER","QUOTED_KEY","VALID_QUOTES","VALID_KEY","WHITE_SPACE","isArray","Array","create","path","quote","ReferenceError","test","SyntaxError","pathString","reduce","createGetNormalizedCreateKey","slice","parse","parseStringPath","map","getNormalizedParseKey","normalizedParseKey","isNumericKey","key","length","isQuotedKey","array","fn","mapped","index","shouldBeInBrackets","shouldBeInQuotes","existingString","normalizedKey","cleanKey","match"],"mappings":"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","file":"pathington.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pathington\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pathington\"] = factory();\n\telse\n\t\troot[\"pathington\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * @constant {Object} CACHE\n *\n * @property {function} clear clear the cache results\n * @property {Object} results the map of path => array results\n * @property {number} size the size of the cache\n */\nexport const CACHE = {\n  clear() {\n    CACHE.results = {};\n    CACHE.size = 0;\n  },\n  results: {},\n  size: 0,\n};\n\n/**\n * @constant {RegExp} DOTTY_WITH_BRACKETS_SYNTAX\n */\nexport const DOTTY_WITH_BRACKETS_SYNTAX = /\"[^\"]+\"|`[^`]+`|'[^']+'|[^.[\\]]+/g;\n\n/**\n * @constant {number} MAX_CACHE_SIZE\n */\nexport const MAX_CACHE_SIZE = 500;\n\n/**\n * @constant {RegExp} NUMBER\n */\nexport const NUMBER = /^\\d+$/i;\n\n/**\n * @constant {RegExp} QUOTED_KEY\n */\nexport const QUOTED_KEY = /^\"[^\"]+\"|`[^`]+`|'[^']+'$/;\n\n/**\n * @constant {Array<string>} VALID_QUOTES\n */\nexport const VALID_QUOTES = /^[\"'`]{1}$/;\n\n/**\n * @constant {RegExp} VALID_KEY\n */\nexport const VALID_KEY = /^\\d+$|^[a-zA-Z_$][\\w$]+$/;\n\n/**\n * @constant {RegExp} WHITE_SPACE\n */\nexport const WHITE_SPACE = /\\s/;\n","// constants\nimport {VALID_QUOTES} from './constants';\n\n// utils\nimport {\n  createGetNormalizedCreateKey,\n  getNormalizedParseKey,\n  map,\n  parseStringPath,\n} from './utils';\n\nconst {isArray} = Array;\n\n/**\n * @function create\n *\n * @description\n * create a new path string based on the path and quote passed\n *\n * @param {Array<number|string>} path the path to convert to a string\n * @param {string} [quote=\"] the quote string to use when quoting keys\n * @returns {string} the path string\n */\nexport const create = (path, quote = '\"') => {\n  if (!isArray(path)) {\n    throw new ReferenceError('path passed must be an array');\n  }\n\n  if (!VALID_QUOTES.test(quote)) {\n    throw new SyntaxError(`quote ${quote} passed is invalid, must be \", \\`, or '.`);\n  }\n\n  const pathString = path.reduce(createGetNormalizedCreateKey(quote), '');\n\n  return pathString[0] === '.' ? pathString.slice(1) : pathString;\n};\n\n/**\n * @function parse\n *\n * @description\n * the path parsed into a valid array of keys / indices\n *\n * @param {Array<number|string>|number|string} path the path to parse\n * @returns {Array<number|string>} the parsed path\n */\nexport const parse = (path) => {\n  if (typeof path === 'string') {\n    return parseStringPath(path);\n  }\n\n  if (isArray(path)) {\n    return map(path, getNormalizedParseKey);\n  }\n\n  const normalizedParseKey = getNormalizedParseKey(path);\n\n  return [typeof normalizedParseKey === 'number' ? normalizedParseKey : `${normalizedParseKey}`];\n};\n","// constants\nimport {\n  CACHE,\n  DOTTY_WITH_BRACKETS_SYNTAX,\n  MAX_CACHE_SIZE,\n  NUMBER,\n  QUOTED_KEY,\n  VALID_KEY,\n  WHITE_SPACE,\n} from './constants';\n\n/**\n * @function isNumericKey\n *\n * @description\n * is the key passed a numeric string\n *\n * @param {string} key the key to test\n * @returns {boolean} is the key passed a numeric string\n */\nexport const isNumericKey = (key) => !!(key && key.length) && NUMBER.test(key);\n\n/**\n * @function isQuotedKey\n *\n * @description\n * is the key passed a quoted key\n *\n * @param {string} key the key to test\n * @returns {boolean} is the key a quoted key\n */\nexport const isQuotedKey = (key) => QUOTED_KEY.test(key);\n\n/**\n * @function map\n *\n * @description\n * map the array to a new array based on fn\n *\n * @param {Array<*>} array the array to map\n * @param {function} fn the function to call with each iteration value\n * @returns {Array<*>} the mapped array\n */\nexport const map = (array, fn) => {\n  const length = array.length;\n  const mapped = [];\n\n  for (let index = 0; index < length; index++) {\n    mapped[index] = fn(array[index]);\n  }\n\n  return mapped;\n};\n\n/**\n * @function shouldBeInBrackets\n *\n * @description\n * should the key passed be encased in brackets when in the path string\n *\n * @param {*} key the key that is being added to the path string\n * @returns {boolean} should the key be in brackets\n */\nexport const shouldBeInBrackets = (key) => typeof key === 'number' || isNumericKey(key) || isQuotedKey(key);\n\n/**\n * @function shouldBeInQuotes\n *\n * @description\n * should the key passed be encased in quotes when in the path string\n *\n * @param {*} key the key that is being added to the path string\n * @returns {boolean} should the key be in quotes\n */\nexport const shouldBeInQuotes = (key) => WHITE_SPACE.test(key) || !VALID_KEY.test(key);\n\n/**\n * @function createGetNormalizedCreateKey\n *\n * @description\n * get the normalized path string based on the quote and key passed\n *\n * @param {string} [quote=\"] the quote string to use\n * @returns {function(string, *): string}\n */\nexport const createGetNormalizedCreateKey = (quote) => (existingString, key) => {\n  const normalizedKey = shouldBeInQuotes(key) ? `${quote}${key}${quote}` : key;\n\n  return existingString + (shouldBeInBrackets(normalizedKey) ? `[${normalizedKey}]` : `.${normalizedKey}`);\n};\n\n/**\n * @function getNormalizedParseKey\n *\n * @description\n * get the key as a number if parseable, or as a quoted string if applicable\n *\n * @param {string} key the key to try to parse\n * @returns {number|string} the parsed key\n */\nexport const getNormalizedParseKey = (key) => {\n  const cleanKey = isQuotedKey(key) ? key.slice(1, key.length - 1) : key;\n\n  return isNumericKey(cleanKey) ? +cleanKey : cleanKey;\n};\n\n/**\n * @function parsePath\n *\n * @description\n * parse the path, memoizing the results\n *\n * @param {string} path the path to parse\n * @returns {Array<number|string>} the parsed path\n */\nexport const parseStringPath = (path) => {\n  if (CACHE.results[path]) {\n    return CACHE.results[path];\n  }\n\n  if (CACHE.size > MAX_CACHE_SIZE) {\n    CACHE.clear();\n  }\n\n  CACHE.results[path] = path ? map(path.match(DOTTY_WITH_BRACKETS_SYNTAX), getNormalizedParseKey) : [path];\n  CACHE.size++;\n\n  return CACHE.results[path];\n};\n"],"sourceRoot":""}