// external dependencies
import { parse } from 'pathington'; // utils

import { getNestedProperty } from './utils';
/**
 * @function createIdentity
 *
 * @description
 * create an identity method for a specific argument index
 *
 * @param {number} argIndex the index of the argument to get
 * @param {Array<number|string>|number|string} path the nested path to retrieve the value from
 * @returns {function(...Array<*>): *} the identity method for the given argument
 */

export var createIdentity = function createIdentity(argIndex, path) {
  var shouldGetNestedValue = path !== void 0;
  return function () {
    // eslint-disable-next-line prefer-rest-params
    var value = arguments[argIndex < 0 ? arguments.length + argIndex : argIndex];
    return shouldGetNestedValue ? getNestedProperty(parse(path), value) : value;
  };
};
export var identity = createIdentity(0);
export var identitySecond = createIdentity(1);
export var identityLast = createIdentity(-1);
export var identitySecondLast = createIdentity(-2);